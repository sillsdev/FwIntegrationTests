import string
import os
import zipfile
import subprocess
import shutil
import sikuli
import test_helper

if test_helper.myOS == "W":
    flexProjectsFolder = "c:/ProgramData/SIL/FieldWorks/Projects/"
elif test_helper.myOS == "L":
    flexProjectsFolder = os.path.join(test_helper.home_folder,".local/share/fieldworks/Projects/")
myProjectsFolder = os.path.normpath(os.path.join(sikuli.getParentPath(),"projects"))+os.path.sep

def openFwBackup(source_filename, mywait=60):
    '''
    Usage: flex_helper.openFwBackup("Kamasau 2015-07-07 1036 for testing purposes.fwbackup")
    or flex_helper.openFwBackup("Kamasau 2015-07-07 1036 for testing purposes.fwbackup", 25)
    '''
    source_path =  os.path.join(myProjectsFolder, source_filename)
    with zipfile.ZipFile(source_path) as zf:
        for file in zf.namelist():
            if file[-7:] == ".fwdata" :
                dest = os.path.join(os.path.normpath(flexProjectsFolder),str(file[:-7]))
                fwdataFile = file

        ###start zf.extractall(dest) workaround ###
        ###modified from sikuli.jar/Lib/zipfile.py[1041-1081]###
        for member in zf.infolist():
            arcname = str(member.filename).replace('/', os.path.sep)
            if os.path.altsep:
                arcname = arcname.replace(os.path.altsep, os.path.sep)
            # interpret absolute pathname as relative, remove drive letter or
            # UNC path, redundant separators, "." and ".." components.
            arcname = os.path.splitdrive(arcname)[1]
            arcname = os.path.sep.join(x for x in arcname.split(os.path.sep)
                        if x not in ('', os.path.curdir, os.path.pardir))
            if os.path.sep == '\\':
                # filter illegal characters on Windows
                illegal = ':<>|"?*'
                table = string.maketrans(illegal, '_' * len(illegal))
                arcname = arcname.translate(table)
                # remove trailing dots
                arcname = (x.rstrip('.') for x in arcname.split(os.path.sep))
                arcname = os.path.sep.join(x for x in arcname if x)

            targetpath = os.path.join(dest, arcname)
            targetpath = os.path.normpath(targetpath)

            # Create all upper directories if necessary.
            upperdirs = os.path.dirname(targetpath)
            if upperdirs and not os.path.exists(upperdirs):
                os.makedirs(upperdirs)

            if str(member.filename)[-1] == '/':
                if not os.path.isdir(targetpath):
                    os.mkdir(targetpath)
                return targetpath

            #with zf.open(member) as source, \
            #     file(targetpath, "wb") as target:
            #    shutil.copyfileobj(source, target)

            source = zf.open(str(member.filename))
            newdest =  os.path.join(dest,os.path.normpath(str(member.filename)))
            target = open(newdest , "wb")
            shutil.copyfileobj(source, target)
        ###end extractall workaround###

    sikuli.wait(mywait)
    openFwData(os.path.join(dest,fwdataFile))

def openFwData(source_filename):
    '''
    Usage flex_helper.openFwData("sena3\Sena 3.fwdata")
    '''
    source_path =  os.path.join(myProjectsFolder, source_filename)
    #TODO only provide fwdata name and search through myProjectsFolder to determine path
    if test_helper.myOS == "W":
        executable = "fieldworks "
    elif test_helper.myOS == "L":
        executable = "fieldworks-flex "
    cmd = executable+' -proj "'+source_path+'"'
    subprocess.Popen(cmd, shell=True)
